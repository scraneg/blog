<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Node.js期中爬虫实验项目</title>
    <url>/article/5526/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="期中作业要求"><a href="#期中作业要求" class="headerlink" title="期中作业要求"></a>期中作业要求</h1><p><img src="https://img-blog.csdnimg.cn/20210416162003770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<span id="more"></span>
<h1 id="基础概念引入"><a href="#基础概念引入" class="headerlink" title="基础概念引入"></a>基础概念引入</h1><blockquote>
<p>前后端<br>前台：呈现给用户的视觉和基本的操作。<br>后台：用户浏览网页时，我们看不见的后台数据跑动。后台包括前端、后端。<br>前端：对应html、css、javascript 等网页语言作用在前端网页。<br>后端：对应jsp、javaBean、dao层、action层和service层的业务逻辑代码。（包括数据库）</p>
</blockquote>
<blockquote>
<p>Web<br>定义：Web 是一种基于超文本和HTTP协议的、全球性的、动态交互的、跨平台的分布式图形信息系统，是建立在Internet上的一种网络服务。<br>组成部分：<br>结构标准语言（html）：存放网页元素。决定网页结构和内容（决定看到什么），相当于人的身体（描述类）<br>表现标准语言（css）：对元素的样式进行设置，例如宽度、高度、位置、字体。决定网页呈现给用户的模样（决定好不好看），相当于化妆（描述类）<br>行为标准语言（javascript）：对元素取值，动态的改变。实现业务逻辑和页面控制（决定功能），相当于人的各种动作（编程类）</p>
</blockquote>
<blockquote>
<p>Node.js<br>Node.js 就是运行在服务端的 JavaScript。<br>Node.js是一个事件驱动I&#x2F;O服务端JavaScript环境，基于Google Chrome的V8引擎，V8引擎执行JavaScript的速度非常快，性能非常好。<br>node.js属于异步编程：发送初始请求，没有得到响应的时候可以继续发送请求，如果第一个发送的请求得到响应了，就返回。即同时执行多个。<br>而如php，java是同步，必须得到响应之后才能继续发送请求</p>
</blockquote>
<blockquote>
<p>检查和源码的区别<br>1.查看源代码：他人服务器发送到浏览器的原封不动的代码，也就是最原始的代码。在源代码中找不到的代码，是在浏览器执行js动态生成的。<br>2.检查（F12）：最终的html代码。即：源代码 + 网页js渲染 。</p>
</blockquote>
<h1 id="前期准备工作"><a href="#前期准备工作" class="headerlink" title="前期准备工作"></a>前期准备工作</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p><a href="https://nodejs.org/en/">node.js下载地址</a><br><img src="https://img-blog.csdnimg.cn/20210417074824106.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>以使用最广泛的开源数据库MySQL为例<br><a href="https://dev.mysql.com/downloads/mysql/">mysql下载地址</a><br><img src="https://img-blog.csdnimg.cn/20210416211812136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>老师给的ppt上有详细的初始配置流程</p>
<p><a href="https://www.cnblogs.com/winton-nfs/p/11524007.html">mysql配置也可参考网站</a></p>
<h2 id="安装Navicat-Premium-15"><a href="#安装Navicat-Premium-15" class="headerlink" title="安装Navicat Premium 15"></a>安装Navicat Premium 15</h2><p>学姐推荐下载这个软件，可以使爬取的数据显示更为清晰明了</p>
<p>Navicat是一套快速、可靠的数据库管理工具。<br><a href="http://www.navicat.com.cn/">Navicat下载地址</a><br><img src="https://img-blog.csdnimg.cn/20210416212851962.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="正则表达式学习网站"><a href="#正则表达式学习网站" class="headerlink" title="正则表达式学习网站"></a>正则表达式学习网站</h2><p><a href="https://regex101.com/">regular expressions 101</a><br><img src="https://img-blog.csdnimg.cn/20210417222449923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><a href="https://c.runoob.com/front-end/854">菜鸟教程正则表达式在线测试</a><img src="https://img-blog.csdnimg.cn/20210417223801892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="课堂示例演示"><a href="#课堂示例演示" class="headerlink" title="课堂示例演示"></a>课堂示例演示</h1><h2 id="示例一（显示在终端中"><a href="#示例一（显示在终端中" class="headerlink" title="示例一（显示在终端中"></a>示例一（显示在终端中</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myRequest=<span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> myCheerio=<span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> myURL=<span class="string">&#x27;http://www.ecnu.edu.cn/e5/bc/c1950a255420/page.htm&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url,callback</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> options=&#123;</span><br><span class="line">        <span class="attr">url</span>:url,</span><br><span class="line">        <span class="attr">encoding</span>:<span class="literal">null</span>,</span><br><span class="line">        <span class="attr">headers</span>:<span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options,callback)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">request</span>(myURL,<span class="keyword">function</span>(<span class="params">err,res,body</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> html=body</span><br><span class="line">    <span class="keyword">var</span> $=myCheerio.<span class="title function_">load</span>(html,&#123;<span class="attr">decodeEntities</span>:<span class="literal">false</span>&#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>($.<span class="title function_">html</span>())</span><br><span class="line">    <span class="comment">// html页面title的信息</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;title:&#x27;</span>+$(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">text</span>())</span><br><span class="line">    <span class="comment">// html页面的摘要的信息</span></span><br><span class="line">    <span class="comment">// console.log(&#x27;description:&#x27;+$(&#x27;meta[name=&quot;description&quot;]&#x27;).eq(0).attr(&quot;content&quot;))  </span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>实际现在这个网站不可访问，无法输出下列结果，但可以正常输出网页结构，即运行成功<br><img src="https://img-blog.csdnimg.cn/20210416195341705.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="示例二（保存在本地文件"><a href="#示例二（保存在本地文件" class="headerlink" title="示例二（保存在本地文件"></a>示例二（保存在本地文件</h2><blockquote>
<p>流程<br>1、读取种子页面<br>2、分析出种子页面里的所有新闻链接<br>3、爬取所有新闻链接的内容<br>4、分析新闻页面内容，解析出结构化数据<br>5、将结构化数据保存到本地文件</p>
</blockquote>
<h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><p>require引入模块。保存在本地文件的关键模块是fs。故在后续存入数据库的代码中，fs模块是可以省略的。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);<span class="comment">//通过require引入各种包，以方便功能地实现request，fs功能是使爬取内容保存在本地，对系统文件和目录读取</span></span><br><span class="line"><span class="keyword">var</span> myRequest = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>)<span class="comment">//发送http请求</span></span><br><span class="line"><span class="keyword">var</span> myCheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>)<span class="comment">//获取html内容，使用jquery的方式</span></span><br><span class="line"><span class="keyword">var</span> myIconv = <span class="built_in">require</span>(<span class="string">&#x27;iconv-lite&#x27;</span>)<span class="comment">//用于各字符集间高效的转码，编码转码gb2312到utf-8</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;date-utils&#x27;</span>);<span class="comment">//为了解析日期的方便</span></span><br></pre></td></tr></table></figure>

<p>获取URL（即获取要访问的网址</p>
<blockquote>
<p>Uniform Resource Locator,统一资源定位器。它是万维网（www）的统一资源定位标志，即指网络地址。<br>URL格式一般如下：<br>协议类型:&#x2F;&#x2F;服务器地址[:端口号]&#x2F;路径&#x2F;文件名[参数&#x3D;值]</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> source_name = <span class="string">&quot;中国新闻网&quot;</span>;<span class="comment">//获取url 其格式一般为“协议名+主机名/IP地址及其端口+文件路径”</span></span><br><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;utf-8&quot;</span>;<span class="comment">//字符编码</span></span><br><span class="line"><span class="keyword">var</span> seedURL = <span class="string">&#x27;http://www.chinanews.com/&#x27;</span>;<span class="comment">//目标网址中国新闻网</span></span><br></pre></td></tr></table></figure>

<p>定义新闻元素的读取方式，即规定哪些url可有作为新闻页面，最后两行使用的是正则表达式，用于检查网页是否符合规范</p>
<blockquote>
<p>正则表达式（regular expression)描述了一种字符串匹配的模式（pattern），可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。<br><a href="https://www.runoob.com/regexp/regexp-syntax.html">正则表达式语法教程</a></p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> keywords_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;keywords\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> title_format = <span class="string">&quot;$(&#x27;title&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> date_format = <span class="string">&quot;$(&#x27;#pubtime_baidu&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> author_format = <span class="string">&quot;$(&#x27;#editor_baidu&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> content_format = <span class="string">&quot;$(&#x27;.left_zw&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> desc_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;description\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> source_format = <span class="string">&quot;$(&#x27;#source_baidu&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\d&#123;4&#125;)\/(\d&#123;2&#125;)-(\d&#123;2&#125;)\/(\d&#123;7&#125;).shtml/</span>;</span><br><span class="line"><span class="keyword">var</span> regExp = <span class="regexp">/((\d&#123;4&#125;|\d&#123;2&#125;)(\-|\/|\.)\d&#123;1,2&#125;\3\d&#123;1,2&#125;)|(\d&#123;4&#125;年\d&#123;1,2&#125;月\d&#123;1,2&#125;日)/</span></span><br></pre></td></tr></table></figure>

<p>构造一个模仿浏览器的request</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//防止网站屏蔽爬虫</span></span><br><span class="line"><span class="comment">//如果爬取过于频繁，可能会被网站屏蔽，这段代码的作用是伪装成浏览器，防止被屏蔽</span></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//request模块异步fetch url</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">10000</span> </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options, callback)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>读取种子页面，解析出种子页面里所有的a herf链接</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">request</span>(seedURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123;</span><br><span class="line">    <span class="comment">// try &#123;</span></span><br><span class="line">    <span class="comment">//用iconv转换编码</span></span><br><span class="line">    <span class="keyword">var</span> html = myIconv.<span class="title function_">decode</span>(body, myEncoding);</span><br><span class="line">    <span class="comment">//console.log(html);</span></span><br><span class="line">    <span class="comment">//准备用cheerio解析html</span></span><br><span class="line">    <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    <span class="comment">// &#125; catch (e) &#123; console.log(&#x27;读种子页面并转码出错：&#x27; + e) &#125;;</span></span><br><span class="line">    <span class="keyword">var</span> seedurl_news;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        seedurl_news = <span class="built_in">eval</span>(seedURL_format);</span><br><span class="line">        <span class="comment">//console.log(seedurl_news);</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;url列表所处的html块识别出错：&#x27;</span> + e) &#125;;</span><br></pre></td></tr></table></figure>
<p>遍历种子页面里所有的a herf链接<br>规整化所有链接，如果满足新闻url的正则表达式就爬取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">    seedurl_news.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, e</span>) &#123; </span><br><span class="line">        <span class="keyword">var</span> myURL = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//得到具体新闻url</span></span><br><span class="line">            <span class="keyword">var</span> href = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            href = $(e).<span class="title function_">attr</span>(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_">typeof</span>(href) == <span class="string">&quot;undefined&quot;</span>) &#123;  <span class="comment">// 有些网页地址undefined</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span> || href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;https://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href; <span class="comment">//http://开头的或者https://开头</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (href.<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>)) myURL = <span class="string">&#x27;http:&#x27;</span> + href; <span class="comment">////开头的</span></span><br><span class="line">            <span class="keyword">else</span> myURL = seedURL.<span class="title function_">substr</span>(<span class="number">0</span>, seedURL.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>) + href; <span class="comment">//其他</span></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;识别种子页面中的新闻链接出错：&#x27;</span> + e) &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!url_reg.<span class="title function_">test</span>(myURL)) <span class="keyword">return</span>; <span class="comment">//检验是否符合新闻url的正则表达式</span></span><br><span class="line">        <span class="comment">//console.log(myURL);</span></span><br><span class="line">        <span class="title function_">newsGet</span>(myURL); <span class="comment">//读取新闻页面</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>读取具体的新闻页面，构造一个空的fetch对象用于存储数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">newsGet</span>(<span class="params">myURL</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">    <span class="title function_">request</span>(myURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取具体的新闻页面，构造一个空的fetch对象用于存储数据</span></span><br><span class="line">        <span class="comment">//try &#123;</span></span><br><span class="line">        <span class="keyword">var</span> html_news = myIconv.<span class="title function_">decode</span>(body, myEncoding); <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="comment">//console.log(html_news);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html_news</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html_news, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        myhtml = html_news;</span><br><span class="line">        <span class="comment">//&#125; catch (e) &#123;    console.log(&#x27;读新闻页面并转码出错：&#x27; + e);&#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;转码读取成功:&quot;</span> + myURL);</span><br><span class="line">        <span class="comment">//动态执行format字符串，构建json对象准备写入文件或数据库</span></span><br><span class="line">        <span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">        fetch.<span class="property">title</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        fetch.<span class="property">content</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        fetch.<span class="property">publish_date</span> = (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD&quot;</span>);</span><br><span class="line">        <span class="comment">//fetch.html = myhtml;</span></span><br><span class="line">        fetch.<span class="property">url</span> = myURL;</span><br><span class="line">        fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">        fetch.<span class="property">source_encoding</span> = myEncoding; <span class="comment">//编码</span></span><br><span class="line">        fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br></pre></td></tr></table></figure>
<p>读取新闻页面中的元素并保存到fetch对象里</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (keywords_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">keywords</span> = source_name; <span class="comment">// eval(keywords_format);  //没有关键词就用sourcename</span></span><br><span class="line"><span class="keyword">else</span> fetch.<span class="property">keywords</span> = <span class="built_in">eval</span>(keywords_format);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (title_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">title</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">else</span> fetch.<span class="property">title</span> = <span class="built_in">eval</span>(title_format); <span class="comment">//标题</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (date_format != <span class="string">&quot;&quot;</span>) fetch.<span class="property">publish_date</span> = <span class="built_in">eval</span>(date_format); <span class="comment">//刊登日期   </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;date: &#x27;</span> + fetch.<span class="property">publish_date</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(myURL);</span><br><span class="line">fetch.<span class="property">publish_date</span> = regExp.<span class="title function_">exec</span>(fetch.<span class="property">publish_date</span>)[<span class="number">0</span>];</span><br><span class="line">fetch.<span class="property">publish_date</span> = fetch.<span class="property">publish_date</span>.<span class="title function_">replace</span>(<span class="string">&#x27;年&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">fetch.<span class="property">publish_date</span> = fetch.<span class="property">publish_date</span>.<span class="title function_">replace</span>(<span class="string">&#x27;月&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">fetch.<span class="property">publish_date</span> = fetch.<span class="property">publish_date</span>.<span class="title function_">replace</span>(<span class="string">&#x27;日&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">fetch.<span class="property">publish_date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(fetch.<span class="property">publish_date</span>).<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (author_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">author</span> = source_name; <span class="comment">//eval(author_format);  //作者</span></span><br><span class="line"><span class="keyword">else</span> fetch.<span class="property">author</span> = <span class="built_in">eval</span>(author_format);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (content_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">content</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> fetch.<span class="property">content</span> = <span class="built_in">eval</span>(content_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span> + fetch.<span class="property">author</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//内容,是否要去掉作者信息自行决定</span></span><br></pre></td></tr></table></figure>
<p>将fetch对象（获取新闻页面中的信息）存储为json文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (source_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">source</span> = fetch.<span class="property">source_name</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">source</span> = <span class="built_in">eval</span>(source_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//来源</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (desc_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">desc</span> = fetch.<span class="property">title</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">desc</span> = <span class="built_in">eval</span>(desc_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//摘要    </span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> filename = source_name + <span class="string">&quot;_&quot;</span> + (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD&quot;</span>) +</span><br><span class="line">            <span class="string">&quot;_&quot;</span> + myURL.<span class="title function_">substr</span>(myURL.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>) + <span class="string">&quot;.json&quot;</span>;</span><br><span class="line">        <span class="comment">////存储json</span></span><br><span class="line">        fs.<span class="title function_">writeFileSync</span>(filename, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(fetch));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><p>在终端中显示<br><img src="https://img-blog.csdnimg.cn/20210416201523158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在爬虫文件所在路径下显示<br><img src="https://img-blog.csdnimg.cn/20210416201833339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>打开其中一个json文件，可以看到爬取下来的数据（右键格式化文档使显示美观<br><img src="https://img-blog.csdnimg.cn/20210416202019239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="示例三（保存在数据库中"><a href="#示例三（保存在数据库中" class="headerlink" title="示例三（保存在数据库中"></a>示例三（保存在数据库中</h2><blockquote>
<p>流程<br>1、数据库存储爬取的数据<br>2、爬取新闻页面之前先查询数据库，是否该url已经爬取过了<br>3、设置爬虫定时工作</p>
</blockquote>
<h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><p>示例三建立在示例二的基础上，变动在于储存爬取数据的位置由本地json文件变为数据库。则在其基础上修改即可。准备工作为下载mysql，并进行安装配置。</p>
<p>建表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `fetches` (</span><br><span class="line">  `id_fetches` <span class="type">int</span>(<span class="number">11</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,<span class="comment">--Auto-increment 会在新记录插入表中时生成一个唯一的数字，所以在navicat中查看时每一行前面会有数字标记</span></span><br><span class="line">  `url` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,<span class="comment">--varchar()针对变长数据，如果一个字段值是不固定长度的，只知道它不可能超过10个字符，则它定义为varchar(10)</span></span><br><span class="line">  `source_name` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,<span class="comment">--默认为空，如果这个字段不为空就会在表格里显示null，如果默认不为空default not null，如果默认不为空，这个字段又没有值，是这一条链接中的所有数据都不能插入，会报错</span></span><br><span class="line">  `source_encoding` <span class="type">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `title` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `keywords` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `author` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `publish_date` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `crawltime` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` longtext,<span class="comment">--比text字节数长</span></span><br><span class="line">  `createtime` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id_fetches`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `id_fetches_UNIQUE` (`id_fetches`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `url_UNIQUE` (`url`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;<span class="comment">--规定编码为utf-8</span></span><br></pre></td></tr></table></figure>
<p>创建mysql.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&quot;mysql&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> pool = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>: <span class="string">&#x27;crawl&#x27;</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> query = <span class="keyword">function</span>(<span class="params">sql, sqlparam, callback</span>) &#123;</span><br><span class="line">    pool.<span class="title function_">getConnection</span>(<span class="keyword">function</span>(<span class="params">err, conn</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(err, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            conn.<span class="title function_">query</span>(sql, sqlparam, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                conn.<span class="title function_">release</span>(); <span class="comment">//释放连接 </span></span><br><span class="line">                <span class="title function_">callback</span>(qerr, vals, fields); <span class="comment">//事件驱动回调 </span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> query_noparam = <span class="keyword">function</span>(<span class="params">sql, callback</span>) &#123;</span><br><span class="line">    pool.<span class="title function_">getConnection</span>(<span class="keyword">function</span>(<span class="params">err, conn</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            <span class="title function_">callback</span>(err, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            conn.<span class="title function_">query</span>(sql, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                conn.<span class="title function_">release</span>(); <span class="comment">//释放连接 </span></span><br><span class="line">                <span class="title function_">callback</span>(qerr, vals, fields); <span class="comment">//事件驱动回调 </span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">query</span> = query;</span><br><span class="line"><span class="built_in">exports</span>.<span class="property">query_noparam</span> = query_noparam;</span><br></pre></td></tr></table></figure>

<p>require再引入.&#x2F;mysql.js模块</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>newsGet函数变动为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// var filename = source_name + &quot;_&quot; + (new Date()).toFormat(&quot;YYYY-MM-DD&quot;) +</span></span><br><span class="line">        <span class="comment">//     &quot;_&quot; + myURL.substr(myURL.lastIndexOf(&#x27;/&#x27;) + 1) + &quot;.json&quot;;</span></span><br><span class="line">        <span class="comment">// ////存储json</span></span><br><span class="line">        <span class="comment">// fs.writeFileSync(filename, JSON.stringify(fetch));</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> fetchAddSql = <span class="string">&#x27;INSERT INTO fetches(url,source_name,source_encoding,title,&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;keywords,author,publish_date,crawltime,content) VALUES(?,?,?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> fetchAddSql_Params = [fetch.<span class="property">url</span>, fetch.<span class="property">source_name</span>, fetch.<span class="property">source_encoding</span>,</span><br><span class="line">            fetch.<span class="property">title</span>, fetch.<span class="property">keywords</span>, fetch.<span class="property">author</span>, fetch.<span class="property">publish_date</span>,</span><br><span class="line">            fetch.<span class="property">crawltime</span>.<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD HH24:MI:SS&quot;</span>), fetch.<span class="property">content</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行sql，数据库中fetch表里的url属性是unique的，不会把重复的url内容写入数据库</span></span><br><span class="line">        mysql.<span class="title function_">query</span>(fetchAddSql, fetchAddSql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (qerr) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(qerr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;); <span class="comment">//mysql写入</span></span><br></pre></td></tr></table></figure>
<p>查询数据库判断是否已读取（防止重复存入）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fetch_url_Sql = <span class="string">&#x27;select url from fetches where url=?&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql_Params = [myURL];</span><br><span class="line">            mysql.<span class="title function_">query</span>(fetch_url_Sql, fetch_url_Sql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (vals.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;URL duplicate!&#x27;</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="title function_">newsGet</span>(myURL); <span class="comment">//读取新闻页面</span></span><br></pre></td></tr></table></figure>
<h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h3><p>在终端显示<br>在每次爬取新闻页面之前先查询数据库，是否该url已经爬取过了，故在爬取到相同的内容时，会输出URL duplicate!<br><img src="https://img-blog.csdnimg.cn/20210417075934756.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>在命令行中显示<br><img src="https://img-blog.csdnimg.cn/20210416214616732.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在navicat中显示<br><img src="https://img-blog.csdnimg.cn/2021041707542935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="定时爬取"><a href="#定时爬取" class="headerlink" title="定时爬取"></a>定时爬取</h3><p>在命令行中下载node-schedule模块<br>npm install node-schedule</p>
<p>引入模块</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> schedule = <span class="built_in">require</span>(<span class="string">&#x27;node-schedule&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>增加定时执行代码。即当爬虫程序运行时，没到规定时间，会自动爬取想要获得的数据。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> rule = <span class="keyword">new</span> schedule.<span class="title class_">RecurrenceRule</span>();</span><br><span class="line"><span class="keyword">var</span> times = [<span class="number">0</span>, <span class="number">14</span>]; <span class="comment">//每天2次自动执行</span></span><br><span class="line"><span class="keyword">var</span> times2 = <span class="number">50</span>; <span class="comment">//定义在第几分钟执行</span></span><br><span class="line">rule.<span class="property">hour</span> = times;</span><br><span class="line">rule.<span class="property">minute</span> = times2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定时执行httpGet()函数</span></span><br><span class="line">schedule.<span class="title function_">scheduleJob</span>(rule, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">seedget</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="示例四（在浏览器显示爬取数据"><a href="#示例四（在浏览器显示爬取数据" class="headerlink" title="示例四（在浏览器显示爬取数据"></a>示例四（在浏览器显示爬取数据</h2><blockquote>
<p>流程<br>1、用mysql查询已爬取的数据<br>2、用网页发送请求到后端查询<br>3、用express构建网站访问mysql<br>4、用表格显示查询结果<br>5、可以尝试的其他扩展</p>
</blockquote>
<h3 id="用mysql查询已爬取的数据"><a href="#用mysql查询已爬取的数据" class="headerlink" title="用mysql查询已爬取的数据"></a>用mysql查询已爬取的数据</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> title = <span class="string">&#x27;新冠&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> select_Sql = <span class="string">&quot;select title,author,publish_date from fetches where title like &#x27;%&quot;</span> + title + <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">mysql.<span class="title function_">query</span>(select_Sql, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(vals);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>运行结果<br><img src="https://img-blog.csdnimg.cn/20210417094948556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="用网页发送请求到后端查询"><a href="#用网页发送请求到后端查询" class="headerlink" title="用网页发送请求到后端查询"></a>用网页发送请求到后端查询</h3><p>在浏览器中运行html文件作为前端</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://127.0.0.1:8080/7.02.html&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span> 标题：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>浏览器运行结果<br><img src="https://img-blog.csdnimg.cn/20210417095234124.png" alt="在这里插入图片描述"><br>运行js文件作为后端</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">require</span>(<span class="string">&#x27;url&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span>(<span class="params">request, response</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> pathname = url.<span class="title function_">parse</span>(request.<span class="property">url</span>).<span class="property">pathname</span>;</span><br><span class="line">    <span class="keyword">var</span> params = url.<span class="title function_">parse</span>(request.<span class="property">url</span>, <span class="literal">true</span>).<span class="property">query</span>;</span><br><span class="line">    fs.<span class="title function_">readFile</span>(pathname.<span class="title function_">substr</span>(<span class="number">1</span>), <span class="keyword">function</span>(<span class="params">err, data</span>) &#123;</span><br><span class="line">        response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=utf-8&#x27;</span> &#125;);</span><br><span class="line">        <span class="keyword">if</span> ((params.<span class="property">title</span> === <span class="literal">undefined</span>) &amp;&amp; (data !== <span class="literal">undefined</span>))</span><br><span class="line">            response.<span class="title function_">write</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            response.<span class="title function_">write</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(params));</span><br><span class="line">            <span class="keyword">var</span> select_Sql = <span class="string">&quot;select title,author,publish_date from fetches where title like &#x27;%&quot;</span> +</span><br><span class="line">                params.<span class="property">title</span> + <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line">            mysql.<span class="title function_">query</span>(select_Sql, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(vals);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        response.<span class="title function_">end</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8080</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server running at http://127.0.0.1:8080/&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>终端运行结果<br><img src="https://img-blog.csdnimg.cn/2021041709573843.png"><br>浏览器运行结果（运行js文件后在浏览器中访问<a href="http://127.0.0.1:8080/7.02.html%EF%BC%887.02%E6%98%AF%E4%B8%8A%E9%9D%A2html%E6%96%87%E4%BB%B6%E5%90%8D">http://127.0.0.1:8080/7.02.html（7.02是上面html文件名</a><br><img src="https://img-blog.csdnimg.cn/20210417100315341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210417100325173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="用express构建网站访问mysql"><a href="#用express构建网站访问mysql" class="headerlink" title="用express构建网站访问mysql"></a>用express构建网站访问mysql</h3><p>前端</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://127.0.0.1:8080/process_get&quot;</span> <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span> 标题：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>运行结果<br><img src="https://img-blog.csdnimg.cn/20210417100537167.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>后端</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//app.use(express.static(&#x27;public&#x27;));</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/7.03.html&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;7.03.html&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/7.04.html&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&quot;/&quot;</span> + <span class="string">&quot;7.04.html&quot;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/process_get&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html;charset=utf-8&#x27;</span> &#125;); <span class="comment">//设置res编码为utf-8</span></span><br><span class="line">    <span class="comment">//sql字符串和参数</span></span><br><span class="line">    <span class="keyword">var</span> fetchSql = <span class="string">&quot;select url,source_name,title,author,publish_date from fetches where title like &#x27;%&quot;</span> +</span><br><span class="line">        req.<span class="property">query</span>.<span class="property">title</span> + <span class="string">&quot;%&#x27;&quot;</span>;</span><br><span class="line">    mysql.<span class="title function_">query</span>(fetchSql, <span class="keyword">function</span>(<span class="params">err, result, fields</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span><br><span class="line">        res.<span class="title function_">end</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(result));</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">var</span> server = app.<span class="title function_">listen</span>(<span class="number">8080</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;访问地址为 http://127.0.0.1:8080/7.03.html&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>终端运行结果<br><img src="https://img-blog.csdnimg.cn/20210417101052911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>浏览器运行结果<br><img src="https://img-blog.csdnimg.cn/20210417100947235.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20210417100938493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="用表格显示查询结果"><a href="#用表格显示查询结果" class="headerlink" title="用表格显示查询结果"></a>用表格显示查询结果</h3><p>用express脚手架来创建一个网站框架<br><img src="https://img-blog.csdnimg.cn/20210417143736577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210417151412897.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="爬虫项目展示"><a href="#爬虫项目展示" class="headerlink" title="爬虫项目展示"></a>爬虫项目展示</h1><h2 id="雪球网"><a href="#雪球网" class="headerlink" title="雪球网"></a>雪球网</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>抓取数据有两种方式：<br>1.使用正则表达，适用于日期、网页链接这种有固定格式的<br>如<a href="https://xueqiu.com/1514349083/177532365">https://xueqiu.com/1514349083/177532365</a><br>用于匹配的正则表达式为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\d&#123;10&#125;)\/(\d&#123;9&#125;)/</span>;</span><br></pre></td></tr></table></figure>
<p>2.使用jquery语法，适用于在网页源码&#x2F;检查页面中标签下的数据，可见下<br>ps.如果网页链接不用正则，就是把页面上所有的a href链接都抓回来，有的可能不是我们想要的页面。</p>
<p>获取网页来源名和字符编码（初始声明为“雪球网”和“utf-8”，直接引用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">fetch.<span class="property">source_encoding</span> = myEncoding;</span><br></pre></td></tr></table></figure>

<p>获取帖名<br>源码显示如下，则是文本内容，用.text()<br><img src="https://img-blog.csdnimg.cn/20210418161803951.png" alt="在这里插入图片描述"><br>获取内容和关键字<br>源码如下<br><img src="https://img-blog.csdnimg.cn/20210418162314491.png" alt="在这里插入图片描述"></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch.<span class="property">content</span>=$(<span class="string">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">fetch.<span class="property">keywords</span>= $(<span class="string">&#x27;meta[name=&quot;keywords&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);<span class="string">``</span><span class="string">`js</span></span><br><span class="line"><span class="string">fetch.title=$(&quot;title&quot;).text();</span></span><br></pre></td></tr></table></figure>
<p>获取发帖人昵称<br><img src="https://img-blog.csdnimg.cn/20210418161019801.png" alt="在这里插入图片描述"><br>以下写法无法获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch.<span class="property">author</span>=$(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;data-screenname&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>获取div，然后再去获取属性。修改为以下，依旧无法获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch.<span class="property">author</span>=$(<span class="string">&quot;div&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;data-screenname&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>再指定这个div的class，修改成功</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">fetch.<span class="property">author</span>=$(<span class="string">&quot;div.article__author&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;data-screenname&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>完整的信息筛选代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">    fetch.<span class="property">url</span> = myURL;</span><br><span class="line">    fetch.<span class="property">title</span>=$(<span class="string">&quot;title&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">    <span class="comment">//fetch.title = $(&#x27;h1[class=&quot;article__bd__title&quot;]&#x27;).text();*/</span></span><br><span class="line">    fetch.<span class="property">content</span>=$(<span class="string">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">    <span class="comment">//fetch.content = $(&#x27;div[class=&quot;article__bd__detail&quot;]&#x27;).text();</span></span><br><span class="line">    fetch.<span class="property">publish_date</span> = $(<span class="string">&#x27;div[class=&quot;avatar__subtitle&quot;]&#x27;</span>).<span class="title function_">children</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">    fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">    fetch.<span class="property">source_encoding</span> = myEncoding;</span><br><span class="line">    fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    fetch.<span class="property">author</span>=$(<span class="string">&quot;div.article__author&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;data-screenname&quot;</span>);</span><br><span class="line">    <span class="comment">//fetch.author = $(&#x27;div[class=&quot;avatar__name&quot;]&#x27;).children(&quot;a&quot;).text().split(&quot;(&quot;)[0];也可以，只不过获取的位置不同</span></span><br><span class="line">    fetch.<span class="property">keywords</span>= $(<span class="string">&#x27;meta[name=&quot;keywords&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>进入数据库<br><img src="https://img-blog.csdnimg.cn/20210420145949493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>建表<br><img src="https://img-blog.csdnimg.cn/20210420150004316.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210420150125857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果建错想要删除（别忘了分号<br><img src="https://img-blog.csdnimg.cn/2021042015014842.png" alt="在这里插入图片描述"><br>在数据库中显示已有表格<br><img src="https://img-blog.csdnimg.cn/20210420151824299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在js文件中编写存入数据库语句</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fetchadd =<span class="string">&#x27;INSERT INTO xueqiu(url,source_name,source_encoding,title,keywords,author,publish_date,crawltime,content )VALUES(?,?,?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> fetchadd_params=[fetch.<span class="property">url</span>,fetch.<span class="property">source_name</span>,fetch.<span class="property">source_encoding</span>,fetch.<span class="property">title</span>,fetch.<span class="property">keywords</span>,fetch.<span class="property">author</span>,fetch.<span class="property">publish_date</span>,fetch.<span class="property">crawltime</span>,fetch.<span class="property">content</span>];</span><br><span class="line">    mysql.<span class="title function_">query</span>(fetchadd,fetchadd_params,<span class="keyword">function</span>(<span class="params">qerr,vals,fields</span>)&#123;&#125;);</span><br></pre></td></tr></table></figure>
<p>数据库显示<br>直接在数据库中显示数据会非常的凌乱，可以采用可视化的界面去操作，比如MySQL workbench。也可以使用学姐推荐的navicat。<br><img src="https://img-blog.csdnimg.cn/20210420151849368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>navicat展示<br><img src="https://img-blog.csdnimg.cn/20210420150736115.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>浏览器中显示<br>参照课堂测试案例四，在浏览器中显示需要前端html文件&gt;后端js文件&gt;express构建网站访问mysql&gt;express脚手架构建网z站框架&gt;用表格显示数据结果<br>这里需要在老师给的代码的基础上做出小小的改动<br>后端修改<br><img src="https://img-blog.csdnimg.cn/20210420223834557.png" alt="在这里插入图片描述"><br>前端修改一下展示的名称，中文更鲜明<br><img src="https://img-blog.csdnimg.cn/20210423131548709.png#pic_center" alt="在这里插入图片描述"></p>
<p>增加一个动态背景<br><a href="https://github.com/hustcc/canvas-nest.js">随鼠标变化的蜘蛛网线条</a><br><img src="https://img-blog.csdnimg.cn/20210423131522148.png" alt="在这里插入图片描述"></p>
<p>加上表格（这里还更改了表格默认的颜色和透明度<br><img src="https://img-blog.csdnimg.cn/2021042313171651.png#pic_center" alt="在这里插入图片描述"><br>浏览器运行结果显示<br><img src="https://img-blog.csdnimg.cn/20210423132331819.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myRequest = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myIconv = <span class="built_in">require</span>(<span class="string">&#x27;iconv-lite&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myCheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> source_name = <span class="string">&quot;雪球网&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> seedURL = <span class="string">&#x27;https://xueqiu.com/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="comment">//proxy: &#x27;http://x.x.x.x:8080&#x27;,</span></span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">10000</span> <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options, callback)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">seedget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">seedget</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(<span class="string">&#x27;https://xueqiu.com/&#x27;</span>, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> html = myIconv.<span class="title function_">decode</span>(body, myEncoding);</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="keyword">var</span> seedurl_news;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            seedurl_news = <span class="built_in">eval</span>($(<span class="string">&quot;.AnonymousHome_a__placeholder_3RZ&quot;</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;url列表所处的html块识别出错：&#x27;</span> + e) &#125;;</span><br><span class="line">    </span><br><span class="line">        seedurl_news.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, e</span>) &#123; </span><br><span class="line">            <span class="keyword">var</span> myURL = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> href=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">               href=$(e).<span class="title function_">attr</span>(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(href);</span><br><span class="line">               myURL=<span class="string">&#x27;https://xueqiu.com&#x27;</span>+href</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;识别种子页面中的新闻链接出错：&#x27;</span> + e) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="title function_">newsget</span>(myURL)</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">newsget</span>(<span class="params">myURL</span>)&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="title function_">request</span>(myURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> html_news = myIconv.<span class="title function_">decode</span>(body, myEncoding); </span><br><span class="line">    <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html_news, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    myhtml = html_news; </span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;转码读取成功:&quot;</span> + myURL);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">    fetch.<span class="property">url</span> = myURL;</span><br><span class="line">    fetch.<span class="property">title</span>=$(<span class="string">&quot;title&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">    <span class="comment">//fetch.title = $(&#x27;h1[class=&quot;article__bd__title&quot;]&#x27;).text();*/</span></span><br><span class="line">    fetch.<span class="property">content</span>=$(<span class="string">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">    <span class="comment">//fetch.content = $(&#x27;div[class=&quot;article__bd__detail&quot;]&#x27;).text();</span></span><br><span class="line">    fetch.<span class="property">publish_date</span> = $(<span class="string">&#x27;div[class=&quot;avatar__subtitle&quot;]&#x27;</span>).<span class="title function_">children</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">    fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">    fetch.<span class="property">source_encoding</span> = myEncoding;</span><br><span class="line">    fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    fetch.<span class="property">author</span>=$(<span class="string">&quot;div.article__author&quot;</span>).<span class="title function_">children</span>(<span class="string">&quot;a&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;data-screenname&quot;</span>);</span><br><span class="line">    <span class="comment">//fetch.author = $(&#x27;div[class=&quot;avatar__name&quot;]&#x27;).children(&quot;a&quot;).text().split(&quot;(&quot;)[0];也可以，只不过获取的位置不同</span></span><br><span class="line">    fetch.<span class="property">keywords</span>= $(<span class="string">&#x27;meta[name=&quot;keywords&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> fetchadd =<span class="string">&#x27;INSERT INTO xueqiu(url,source_name,source_encoding,title,keywords,author,publish_date,crawltime,content )VALUES(?,?,?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> fetchadd_params=[fetch.<span class="property">url</span>,fetch.<span class="property">source_name</span>,fetch.<span class="property">source_encoding</span>,fetch.<span class="property">title</span>,fetch.<span class="property">keywords</span>,fetch.<span class="property">author</span>,fetch.<span class="property">publish_date</span>,fetch.<span class="property">crawltime</span>,fetch.<span class="property">content</span>];</span><br><span class="line">    mysql.<span class="title function_">query</span>(fetchadd,fetchadd_params,<span class="keyword">function</span>(<span class="params">qerr,vals,fields</span>)&#123;&#125;);</span><br><span class="line">  </span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="热度分析"><a href="#热度分析" class="headerlink" title="热度分析"></a>热度分析</h3><p><img src="https://img-blog.csdnimg.cn/20210427173727180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="人民网"><a href="#人民网" class="headerlink" title="人民网"></a>人民网</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>修改正则表达式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> keywords_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;keywords\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> title_format = <span class="string">&quot;$(&#x27;title&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> date_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;publishdate\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> author_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;author\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> content_format = <span class="string">&quot;$(&#x27;.fl text_con_left&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> desc_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;description\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> source_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;source\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\w&#123;2&#125;)\/(\d&#123;4&#125;)\/(\d&#123;4&#125;)\/(\w&#123;5,10&#125;-(\w&#123;8,15&#125;)).html/</span>;</span><br><span class="line"><span class="keyword">var</span> regExp = <span class="regexp">/((\d&#123;4&#125;|\d&#123;2&#125;)(\-|\/|\.)\d&#123;1,2&#125;\3\d&#123;1,2&#125;)|(\d&#123;4&#125;年\d&#123;1,2&#125;月\d&#123;1,2&#125;日)/</span></span><br></pre></td></tr></table></figure>
<p>可以运行，但爬取下来的数据在navicat里显示为乱码<br><img src="https://img-blog.csdnimg.cn/20210418114502627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>咨询学长，给出的建议是把myEncoding改为GBK。因为人民网比较特殊，可能请求后响应就是用的GBK 。则一般情况下使用utf-8，如果有乱码问题再尝试GBK。</p>
<p>修改后运行结果<br><img src="https://img-blog.csdnimg.cn/2021041811515774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在浏览器中显示<br><img src="https://img-blog.csdnimg.cn/20210423143126566.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myRequest = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myCheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myIconv = <span class="built_in">require</span>(<span class="string">&#x27;iconv-lite&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;date-utils&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source_name = <span class="string">&quot;人民网&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> domain = <span class="string">&#x27;http://www.people.com.cn/&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;gbk&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> seedURL = <span class="string">&#x27;http://www.people.com.cn/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> keywords_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;keywords\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> title_format = <span class="string">&quot;$(&#x27;title&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> date_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;publishdate\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> author_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;author\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> content_format = <span class="string">&quot;$(&#x27;.fl text_con_left&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> desc_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;description\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> source_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;source\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\w&#123;2&#125;)\/(\d&#123;4&#125;)\/(\d&#123;4&#125;)\/(\w&#123;5,10&#125;-(\w&#123;8,15&#125;)).html/</span>;</span><br><span class="line"><span class="keyword">var</span> regExp = <span class="regexp">/((\d&#123;4&#125;|\d&#123;2&#125;)(\-|\/|\.)\d&#123;1,2&#125;\3\d&#123;1,2&#125;)|(\d&#123;4&#125;年\d&#123;1,2&#125;月\d&#123;1,2&#125;日)/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//防止网站屏蔽我们的爬虫</span></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//request模块异步fetch url</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="comment">//proxy: &#x27;http://x.x.x.x:8080&#x27;,</span></span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">10000</span> <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options, callback)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">seedget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">seedget</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(seedURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取种子页面</span></span><br><span class="line">        <span class="comment">// try &#123;</span></span><br><span class="line">        <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="keyword">var</span> html = myIconv.<span class="title function_">decode</span>(body, myEncoding);</span><br><span class="line">        <span class="comment">//console.log(html);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="comment">// &#125; catch (e) &#123; console.log(&#x27;读种子页面并转码出错：&#x27; + e) &#125;;</span></span><br><span class="line">        <span class="keyword">var</span> seedurl_news;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            seedurl_news = <span class="built_in">eval</span>(seedURL_format);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;url列表所处的html块识别出错：&#x27;</span> + e) &#125;;</span><br><span class="line">        seedurl_news.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, e</span>) &#123; <span class="comment">//遍历种子页面里所有的a链接</span></span><br><span class="line">            <span class="keyword">var</span> myURL = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//得到具体新闻url</span></span><br><span class="line">                <span class="keyword">var</span> href = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                href = $(e).<span class="title function_">attr</span>(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (href == <span class="literal">undefined</span>) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span>||href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;https；://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href;</span><br><span class="line">                <span class="comment">//http://开头的，之前这个文件虽然也能爬，但是会报错，原因是只爬了http开头的网址，现在加了https开头的网址，就好了</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (href.<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>)) myURL = <span class="string">&#x27;http:&#x27;</span> + href; <span class="comment">////开头的</span></span><br><span class="line">                <span class="keyword">else</span> myURL = seedURL.<span class="title function_">substr</span>(<span class="number">0</span>, seedURL.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>) + href; <span class="comment">//其他</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;识别种子页面中的新闻链接出错：&#x27;</span> + e) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!url_reg.<span class="title function_">test</span>(myURL)) <span class="keyword">return</span>; <span class="comment">//检验是否符合新闻url的正则表达式</span></span><br><span class="line">            <span class="comment">//console.log(myURL);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql = <span class="string">&#x27;select url from fetches where url=?&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql_Params = [myURL];</span><br><span class="line">            mysql.<span class="title function_">query</span>(fetch_url_Sql, fetch_url_Sql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (vals.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;URL duplicate!&#x27;</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="title function_">newsGet</span>(myURL); <span class="comment">//读取新闻页面</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">newsGet</span>(<span class="params">myURL</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">    <span class="title function_">request</span>(myURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">        <span class="comment">//try &#123;</span></span><br><span class="line">        <span class="keyword">var</span> html_news = myIconv.<span class="title function_">decode</span>(body, myEncoding); <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="comment">//console.log(html_news);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html_news</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html_news, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        myhtml = html_news;</span><br><span class="line">        <span class="comment">//&#125; catch (e) &#123;    console.log(&#x27;读新闻页面并转码出错：&#x27; + e);&#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;转码读取成功:&quot;</span> + myURL);</span><br><span class="line">        <span class="comment">//动态执行format字符串，构建json对象准备写入文件或数据库</span></span><br><span class="line">        <span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">        fetch.<span class="property">title</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        fetch.<span class="property">content</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        fetch.<span class="property">publish_date</span> = <span class="built_in">eval</span>(date_format);</span><br><span class="line">        <span class="comment">//fetch.html = myhtml;</span></span><br><span class="line">        fetch.<span class="property">url</span> = myURL;</span><br><span class="line">        fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">        fetch.<span class="property">source_encoding</span> = myEncoding; <span class="comment">//编码</span></span><br><span class="line">        fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (keywords_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">keywords</span> = source_name; <span class="comment">// eval(keywords_format);  //没有关键词就用sourcename</span></span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">keywords</span> = <span class="built_in">eval</span>(keywords_format);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (title_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">title</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">title</span> = <span class="built_in">eval</span>(title_format); <span class="comment">//标题</span></span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (author_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">author</span> = source_name; <span class="comment">//eval(author_format);  //作者</span></span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">author</span> = <span class="built_in">eval</span>(author_format);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (content_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">content</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">content</span> = <span class="built_in">eval</span>(content_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span> + fetch.<span class="property">author</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//内容,是否要去掉作者信息自行决定</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (source_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">source</span> = fetch.<span class="property">source_name</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">source</span> = <span class="built_in">eval</span>(source_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//来源</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (desc_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">desc</span> = fetch.<span class="property">title</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">desc</span> = <span class="built_in">eval</span>(desc_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//摘要    </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// var filename = source_name + &quot;_&quot; + (new Date()).toFormat(&quot;YYYY-MM-DD&quot;) +</span></span><br><span class="line">        <span class="comment">//     &quot;_&quot; + myURL.substr(myURL.lastIndexOf(&#x27;/&#x27;) + 1) + &quot;.json&quot;;</span></span><br><span class="line">        <span class="comment">// ////存储json</span></span><br><span class="line">        <span class="comment">// fs.writeFileSync(filename, JSON.stringify(fetch));</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> fetchAddSql = <span class="string">&#x27;INSERT INTO fetches(url,source_name,source_encoding,title,&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;keywords,author,publish_date,crawltime,content) VALUES(?,?,?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> fetchAddSql_Params = [fetch.<span class="property">url</span>, fetch.<span class="property">source_name</span>, fetch.<span class="property">source_encoding</span>,</span><br><span class="line">            fetch.<span class="property">title</span>, fetch.<span class="property">keywords</span>, fetch.<span class="property">author</span>, fetch.<span class="property">publish_date</span>,</span><br><span class="line">            fetch.<span class="property">crawltime</span>.<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD HH24:MI:SS&quot;</span>), fetch.<span class="property">content</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行sql，数据库中fetch表里的url属性是unique的，不会把重复的url内容写入数据库</span></span><br><span class="line">        mysql.<span class="title function_">query</span>(fetchAddSql, fetchAddSql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (qerr) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(qerr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;); <span class="comment">//mysql写入</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="热度分析-1"><a href="#热度分析-1" class="headerlink" title="热度分析"></a>热度分析</h3><p><img src="https://img-blog.csdnimg.cn/20210427173800795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="网易新闻网"><a href="#网易新闻网" class="headerlink" title="网易新闻网"></a>网易新闻网</h2><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>参考老师给出的对中国新闻网页面的爬虫，在此基础上修改对应爬取数据的正则表达式即可</p>
<p>正则表达式修改结果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> keywords_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;keywords\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> title_format = <span class="string">&quot; $(&#x27;meta[property=\&quot;og:title\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> date_format = <span class="string">&quot;$(&#x27;.post_time_source&#x27;).text()&quot;</span>|<span class="string">&quot;$(#ptime).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> author_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;author\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> content_format = <span class="string">&quot;$(&#x27;#endText&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> desc_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;description\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> source_format = <span class="string">&quot;$(&#x27;#ne_article_source&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\d&#123;2&#125;)\/(\d&#123;4&#125;)\/(\d&#123;2&#125;)\/(\w&#123;10,30&#125;).html/</span>;</span><br><span class="line"><span class="keyword">var</span> regExp = <span class="regexp">/((\d&#123;4&#125;|\d&#123;2&#125;)(\-|\/|\.)\d&#123;1,2&#125;\3\d&#123;1,2&#125;)|(\d&#123;4&#125;年\d&#123;1,2&#125;月\d&#123;1,2&#125;日)|(\d&#123;4&#125;\-\d&#123;2&#125;\-\d&#123;2&#125;)/</span></span><br></pre></td></tr></table></figure>

<p>以及一处微小改动<br>老师最初代码里得到具体新闻作用语句如下，只能爬取http协议的链接，修改后可以爬取http和https开头的链接</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href;</span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span>||href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;https；://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href;</span><br></pre></td></tr></table></figure>
<p>终端运行结果显示<br><img src="https://img-blog.csdnimg.cn/20210417232844731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Navicat显示<br><img src="https://img-blog.csdnimg.cn/2021041800151819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>存在问题：终端有报错，Navicat数据表显示不出老师所给中国新闻网案例完整<br><img src="https://img-blog.csdnimg.cn/2021041800133099.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>当mysql出现”ERROR 1062”错误时：查看字段的属性是否合理，不合理，则修改该字段的属性；合理，则进行表的恢复。</p>
</blockquote>
<p>则根据报错内容推测可能是字符编码问题<br>果然经过对网易新闻网检查，利用ctrl+f搜索功能发现含有gbk和utf-8两种编码形式（而中国新闻网只有utf-8一种编码形式<br><a href="https://blog.csdn.net/qq_43557623/article/details/111939073">查看网页编码方式的指路博客</a></p>
<p>尝试解决方法<br>1.将utf-8替换为GBK</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;GBK&quot;</span>;</span><br></pre></td></tr></table></figure>
<p>终端运行结果相同，但会出现1062 ‘GBK’ ‘NULL’报错，且在Navicat上显示出的表格数据为乱码（因为还有utf-8字符编码<br><img src="https://img-blog.csdnimg.cn/20210418005413448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>2.myEncoding设为uft-8，且增加一段代码(来自网络，关键字是解决GBK乱码问题</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getUrl</span>(<span class="params">url, handle</span>) &#123;</span><br><span class="line">    http.<span class="title function_">get</span>(url, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`status code: <span class="subst">$&#123;res.statusCode&#125;</span>`</span>)</span><br><span class="line">        <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        res.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">            html += iconv.<span class="title function_">decode</span>(chunk, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        res.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">handle</span>(html)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`http error: <span class="subst">$&#123;e.message&#125;</span>`</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>终端仍报错（ html +&#x3D; iconv.decode(chunk, ‘GKB’)效果近似），但navicat开始显示content<br><img src="https://img-blog.csdnimg.cn/20210418010611430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>利用express在网页中显示<br><img src="https://img-blog.csdnimg.cn/20210418013545908.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210423143415941.png" alt="在这里插入图片描述"></p>
<p>ps.针对乱码问题咨询了学长，给出的建议是在同时存在GBK编码和utf-8编码的情况下，统一采用utf-8编码。</p>
<h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> myRequest = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myCheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myIconv = <span class="built_in">require</span>(<span class="string">&#x27;iconv-lite&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;date-utils&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source_name = <span class="string">&quot;网易新闻&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> seedURL = <span class="string">&#x27;https://news.163.com/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getUrl</span>(<span class="params">url, handle</span>) &#123;</span><br><span class="line">    http.<span class="title function_">get</span>(url, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`status code: <span class="subst">$&#123;res.statusCode&#125;</span>`</span>)</span><br><span class="line">        <span class="keyword">var</span> html = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        res.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">chunk</span>) =&gt;</span> &#123;</span><br><span class="line">            html += iconv.<span class="title function_">decode</span>(chunk, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        &#125;)</span><br><span class="line">        res.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="title function_">handle</span>(html)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`http error: <span class="subst">$&#123;e.message&#125;</span>`</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> keywords_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;keywords\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> title_format = <span class="string">&quot; $(&#x27;meta[property=\&quot;og:title\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> date_format = <span class="string">&quot;$(&#x27;.post_time_source&#x27;).text()&quot;</span>|<span class="string">&quot;$(#ptime).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> author_format = <span class="string">&quot;$(&#x27;meta[name=\&quot;author\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> content_format = <span class="string">&quot;$(&#x27;#endText&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> desc_format = <span class="string">&quot; $(&#x27;meta[name=\&quot;description\&quot;]&#x27;).eq(0).attr(\&quot;content\&quot;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> source_format = <span class="string">&quot;$(&#x27;#ne_article_source&#x27;).text()&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\d&#123;2&#125;)\/(\d&#123;4&#125;)\/(\d&#123;2&#125;)\/(\w&#123;10,30&#125;).html/</span>;</span><br><span class="line"><span class="keyword">var</span> regExp = <span class="regexp">/((\d&#123;4&#125;|\d&#123;2&#125;)(\-|\/|\.)\d&#123;1,2&#125;\3\d&#123;1,2&#125;)|(\d&#123;4&#125;年\d&#123;1,2&#125;月\d&#123;1,2&#125;日)|(\d&#123;4&#125;\-\d&#123;2&#125;\-\d&#123;2&#125;)/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//防止网站屏蔽我们的爬虫</span></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//request模块异步fetch url</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="comment">//proxy: &#x27;http://x.x.x.x:8080&#x27;,</span></span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">10000</span> <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options, callback)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">seedget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">seedget</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(seedURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取种子页面</span></span><br><span class="line">        <span class="comment">// try &#123;</span></span><br><span class="line">        <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="keyword">var</span> html = myIconv.<span class="title function_">decode</span>(body, myEncoding);</span><br><span class="line">        <span class="comment">//console.log(html);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="comment">// &#125; catch (e) &#123; console.log(&#x27;读种子页面并转码出错：&#x27; + e) &#125;;</span></span><br><span class="line">        <span class="keyword">var</span> seedurl_news;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            seedurl_news = <span class="built_in">eval</span>(seedURL_format);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;url列表所处的html块识别出错：&#x27;</span> + e) &#125;;</span><br><span class="line">        seedurl_news.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, e</span>) &#123; <span class="comment">//遍历种子页面里所有的a链接</span></span><br><span class="line">            <span class="keyword">var</span> myURL = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//得到具体新闻url</span></span><br><span class="line">                <span class="keyword">var</span> href = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                href = $(e).<span class="title function_">attr</span>(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (href == <span class="literal">undefined</span>) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span>||href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;https；://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (href.<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>)) myURL = <span class="string">&#x27;http:&#x27;</span> + href; </span><br><span class="line">                <span class="keyword">else</span> myURL = seedURL.<span class="title function_">substr</span>(<span class="number">0</span>, seedURL.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>) + href; <span class="comment">//其他</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;识别种子页面中的新闻链接出错：&#x27;</span> + e) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!url_reg.<span class="title function_">test</span>(myURL)) <span class="keyword">return</span>; <span class="comment">//检验是否符合新闻url的正则表达式</span></span><br><span class="line">            <span class="comment">//console.log(myURL);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql = <span class="string">&#x27;select url from fetches where url=?&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql_Params = [myURL];</span><br><span class="line">            mysql.<span class="title function_">query</span>(fetch_url_Sql, fetch_url_Sql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                <span class="title function_">newsGet</span>(myURL); <span class="comment">//读取新闻页面</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">newsGet</span>(<span class="params">myURL</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">    <span class="title function_">request</span>(myURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">        <span class="comment">//try &#123;</span></span><br><span class="line">        <span class="keyword">var</span> html_news = myIconv.<span class="title function_">decode</span>(body, myEncoding); <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="comment">//console.log(html_news);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html_news</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html_news, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        myhtml = html_news;</span><br><span class="line">        <span class="comment">//&#125; catch (e) &#123;    console.log(&#x27;读新闻页面并转码出错：&#x27; + e);&#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;转码读取成功:&quot;</span> + myURL);</span><br><span class="line">        <span class="comment">//动态执行format字符串，构建json对象准备写入文件或数据库</span></span><br><span class="line">        <span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">        fetch.<span class="property">title</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        fetch.<span class="property">content</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        fetch.<span class="property">publish_date</span> = (<span class="keyword">new</span> <span class="title class_">Date</span>()).<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD&quot;</span>);</span><br><span class="line">        <span class="comment">//fetch.html = myhtml;</span></span><br><span class="line">        fetch.<span class="property">url</span> = myURL;</span><br><span class="line">        fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">        fetch.<span class="property">source_encoding</span> = myEncoding; <span class="comment">//编码</span></span><br><span class="line">        fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (keywords_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">keywords</span> = source_name; <span class="comment">// eval(keywords_format);  //没有关键词就用sourcename</span></span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">keywords</span> = <span class="built_in">eval</span>(keywords_format);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (title_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">title</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">title</span> = <span class="built_in">eval</span>(title_format); <span class="comment">//标题</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (date_format != <span class="string">&quot;&quot;</span>) fetch.<span class="property">publish_date</span> = <span class="built_in">eval</span>(date_format); <span class="comment">//刊登日期   </span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;date: &#x27;</span> + fetch.<span class="property">publish_date</span>);</span><br><span class="line">        fetch.<span class="property">publish_date</span> = regExp.<span class="title function_">exec</span>(fetch.<span class="property">publish_date</span>)[<span class="number">0</span>];</span><br><span class="line">        fetch.<span class="property">publish_date</span> = fetch.<span class="property">publish_date</span>.<span class="title function_">replace</span>(<span class="string">&#x27;年&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        fetch.<span class="property">publish_date</span> = fetch.<span class="property">publish_date</span>.<span class="title function_">replace</span>(<span class="string">&#x27;月&#x27;</span>, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        fetch.<span class="property">publish_date</span> = fetch.<span class="property">publish_date</span>.<span class="title function_">replace</span>(<span class="string">&#x27;日&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        fetch.<span class="property">publish_date</span> = <span class="keyword">new</span> <span class="title class_">Date</span>(fetch.<span class="property">publish_date</span>).<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (author_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">author</span> = source_name; <span class="comment">//eval(author_format);  //作者</span></span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">author</span> = <span class="built_in">eval</span>(author_format);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (content_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">content</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">content</span> = <span class="built_in">eval</span>(content_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span> + fetch.<span class="property">author</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//内容,是否要去掉作者信息自行决定</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (source_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">source</span> = fetch.<span class="property">source_name</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">source</span> = <span class="built_in">eval</span>(source_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//来源</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (desc_format == <span class="string">&quot;&quot;</span>) fetch.<span class="property">desc</span> = fetch.<span class="property">title</span>;</span><br><span class="line">        <span class="keyword">else</span> fetch.<span class="property">desc</span> = <span class="built_in">eval</span>(desc_format).<span class="title function_">replace</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;&quot;</span>); <span class="comment">//摘要    </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// var filename = source_name + &quot;_&quot; + (new Date()).toFormat(&quot;YYYY-MM-DD&quot;) +</span></span><br><span class="line">        <span class="comment">//     &quot;_&quot; + myURL.substr(myURL.lastIndexOf(&#x27;/&#x27;) + 1) + &quot;.json&quot;;</span></span><br><span class="line">        <span class="comment">// 存储json</span></span><br><span class="line">        <span class="comment">// fs.writeFileSync(filename, JSON.stringify(fetch));</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> fetchAddSql = <span class="string">&#x27;INSERT INTO fetches(url,source_name,source_encoding,title,&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;keywords,author,publish_date,crawltime,content) VALUES(?,?,?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> fetchAddSql_Params = [fetch.<span class="property">url</span>, fetch.<span class="property">source_name</span>, fetch.<span class="property">source_encoding</span>,</span><br><span class="line">            fetch.<span class="property">title</span>, fetch.<span class="property">keywords</span>, fetch.<span class="property">author</span>, fetch.<span class="property">publish_date</span>,</span><br><span class="line">            fetch.<span class="property">crawltime</span>.<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD HH24:MI:SS&quot;</span>), fetch.<span class="property">content</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行sql，数据库中fetch表里的url属性是unique的，不会把重复的url内容写入数据库</span></span><br><span class="line">        mysql.<span class="title function_">query</span>(fetchAddSql, fetchAddSql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (qerr) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(qerr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;); <span class="comment">//mysql写入</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="热度分析-2"><a href="#热度分析-2" class="headerlink" title="热度分析"></a>热度分析</h3><p><img src="https://img-blog.csdnimg.cn/20210427173840365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="小白财经"><a href="#小白财经" class="headerlink" title="小白财经"></a>小白财经</h2><h3 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h3><p>在我的数据库里新建表格,注意这里没有设置唯一约束，所以可以重复爬取。（设置后因未知原因报错故出此下策</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `xiaobai` (</span><br><span class="line">  `id_xiaobai` <span class="type">int</span>(<span class="number">11</span>)  <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `url` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `source_name` text <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `source_encoding` text <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `title` text <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `publish_date` text <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `crawltime` text <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `content` text <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `createtime` datetime <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id_xiaobai`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure>
<p>navicat显示<br><img src="https://img-blog.csdnimg.cn/20210427160051710.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里我们修改一下查询方式，不再使用查询标题，改为查询来源，并且修改在网页显示的内容（因为小白财经没有作者<br><img src="https://img-blog.csdnimg.cn/20210427162223526.png" alt="在这里插入图片描述"><br>前端显示修改<br><img src="https://img-blog.csdnimg.cn/20210427162346732.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210427162406776.png" alt="在这里插入图片描述"><br>浏览器显示<br><img src="https://img-blog.csdnimg.cn/2021042716282936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myRequest = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myCheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myIconv = <span class="built_in">require</span>(<span class="string">&#x27;iconv-lite&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;date-utils&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source_name = <span class="string">&quot;小白财经&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> domain = <span class="string">&#x27;http://www.xiaobaicj.cn/&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> seedURL = <span class="string">&#x27;http://www.xiaobaicj.cn/&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\w&#123;1&#125;)(\d&#123;5&#125;).html/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//防止网站屏蔽我们的爬虫</span></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//request模块异步fetch url</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="comment">//proxy: &#x27;http://x.x.x.x:8080&#x27;,</span></span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">10000</span> <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options, callback)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">seedget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">seedget</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(seedURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取种子页面</span></span><br><span class="line">        <span class="comment">// try &#123;</span></span><br><span class="line">        <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="keyword">var</span> html = myIconv.<span class="title function_">decode</span>(body, myEncoding);</span><br><span class="line">        <span class="comment">//console.log(html);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="comment">// &#125; catch (e) &#123; console.log(&#x27;读种子页面并转码出错：&#x27; + e) &#125;;</span></span><br><span class="line">        <span class="keyword">var</span> seedurl_news;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            seedurl_news = <span class="built_in">eval</span>(seedURL_format);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;url列表所处的html块识别出错：&#x27;</span> + e) &#125;;</span><br><span class="line">        seedurl_news.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, e</span>) &#123; <span class="comment">//遍历种子页面里所有的a链接</span></span><br><span class="line">            <span class="keyword">var</span> myURL = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//得到具体新闻url</span></span><br><span class="line">                <span class="keyword">var</span> href = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                href = $(e).<span class="title function_">attr</span>(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (href == <span class="literal">undefined</span>) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span>||href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;https；://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href;</span><br><span class="line">                <span class="comment">//http://开头的，之前这个文件虽然也能爬，但是会报错，原因是只爬了http开头的网址，现在加了https开头的网址，就好了</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (href.<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>)) myURL = <span class="string">&#x27;http:&#x27;</span> + href; <span class="comment">////开头的</span></span><br><span class="line">                <span class="keyword">else</span> myURL = seedURL.<span class="title function_">substr</span>(<span class="number">0</span>, seedURL.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>) + href; <span class="comment">//其他</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;识别种子页面中的新闻链接出错：&#x27;</span> + e) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!url_reg.<span class="title function_">test</span>(myURL)) <span class="keyword">return</span>; <span class="comment">//检验是否符合新闻url的正则表达式</span></span><br><span class="line">            <span class="comment">//console.log(myURL);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql = <span class="string">&#x27;select url from fetches where url=?&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql_Params = [myURL];</span><br><span class="line">            mysql.<span class="title function_">query</span>(fetch_url_Sql, fetch_url_Sql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (vals.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;URL duplicate!&#x27;</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="title function_">newsGet</span>(myURL); <span class="comment">//读取新闻页面</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">newsGet</span>(<span class="params">myURL</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">    <span class="title function_">request</span>(myURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">        <span class="comment">//try &#123;</span></span><br><span class="line">        <span class="keyword">var</span> html_news = myIconv.<span class="title function_">decode</span>(body, myEncoding); <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="comment">//console.log(html_news);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html_news</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html_news, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        myhtml = html_news;</span><br><span class="line">        <span class="comment">//&#125; catch (e) &#123;    console.log(&#x27;读新闻页面并转码出错：&#x27; + e);&#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;转码读取成功:&quot;</span> + myURL);</span><br><span class="line">        <span class="comment">//动态执行format字符串，构建json对象准备写入文件或数据库</span></span><br><span class="line">        <span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">        fetch.<span class="property">title</span> = $(<span class="string">&#x27;h1[class=&quot;entry-title&quot;]&#x27;</span>).<span class="title function_">text</span>();</span><br><span class="line">        <span class="keyword">if</span> (fetch.<span class="property">title</span> == <span class="string">&quot;&quot;</span>) fetch.<span class="property">title</span> = <span class="string">&quot;无标题&quot;</span>;</span><br><span class="line">        fetch.<span class="property">content</span> = $(<span class="string">&#x27;div[class=&quot;entry-content&quot;]&#x27;</span>).<span class="title function_">text</span>();</span><br><span class="line">        fetch.<span class="property">publish_date</span> = $(<span class="string">&#x27;span[class=&quot;entry-date&quot;]&#x27;</span>).<span class="title function_">text</span>();</span><br><span class="line">        fetch.<span class="property">url</span> = myURL;</span><br><span class="line">        fetch.<span class="property">source_name</span> = source_name;</span><br><span class="line">        fetch.<span class="property">source_encoding</span> = myEncoding; <span class="comment">//编码</span></span><br><span class="line">        fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> fetchAddSql = <span class="string">&#x27;INSERT INTO xiaobai(url,source_name,source_encoding,title,publish_date,crawltime,content) VALUES(?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> fetchAddSql_Params = [fetch.<span class="property">url</span>, fetch.<span class="property">source_name</span>, fetch.<span class="property">source_encoding</span>,</span><br><span class="line">            fetch.<span class="property">title</span>, fetch.<span class="property">publish_date</span>,fetch.<span class="property">crawltime</span>.<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD HH24:MI:SS&quot;</span>), fetch.<span class="property">content</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行sql，数据库中fetch表里的url属性是unique的，不会把重复的url内容写入数据库</span></span><br><span class="line">        mysql.<span class="title function_">query</span>(fetchAddSql, fetchAddSql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (qerr) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(qerr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;); <span class="comment">//mysql写入</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="热度分析-3"><a href="#热度分析-3" class="headerlink" title="热度分析"></a>热度分析</h3><p><img src="https://img-blog.csdnimg.cn/20210427173925991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="东方财富网"><a href="#东方财富网" class="headerlink" title="东方财富网"></a>东方财富网</h2><h3 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h3><p>navicat显示<br><img src="https://img-blog.csdnimg.cn/20210427190332574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>浏览器显示结果<br><img src="https://img-blog.csdnimg.cn/20210427190221948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myRequest = <span class="built_in">require</span>(<span class="string">&#x27;request&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myCheerio = <span class="built_in">require</span>(<span class="string">&#x27;cheerio&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> myIconv = <span class="built_in">require</span>(<span class="string">&#x27;iconv-lite&#x27;</span>);</span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;date-utils&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;./mysql.js&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source_name = <span class="string">&quot;东方财富网&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> myEncoding = <span class="string">&quot;utf-8&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> seedURL = <span class="string">&#x27;https://www.eastmoney.com/&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> seedURL_format = <span class="string">&quot;$(&#x27;a&#x27;)&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> url_reg = <span class="regexp">/\/(\w&#123;1&#125;)\/(\d&#123;18&#125;).html/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//防止网站屏蔽我们的爬虫</span></span><br><span class="line"><span class="keyword">var</span> headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//request模块异步fetch url</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callback</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">encoding</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="comment">//proxy: &#x27;http://x.x.x.x:8080&#x27;,</span></span><br><span class="line">        <span class="attr">headers</span>: headers,</span><br><span class="line">        <span class="attr">timeout</span>: <span class="number">10000</span> <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">myRequest</span>(options, callback)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="title function_">seedget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">seedget</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">request</span>(seedURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取种子页面</span></span><br><span class="line">        <span class="comment">// try &#123;</span></span><br><span class="line">        <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="keyword">var</span> html = myIconv.<span class="title function_">decode</span>(body, myEncoding);</span><br><span class="line">        <span class="comment">//console.log(html);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        <span class="comment">// &#125; catch (e) &#123; console.log(&#x27;读种子页面并转码出错：&#x27; + e) &#125;;</span></span><br><span class="line">        <span class="keyword">var</span> seedurl_news;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            seedurl_news = <span class="built_in">eval</span>(seedURL_format);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;url列表所处的html块识别出错：&#x27;</span> + e) &#125;;</span><br><span class="line">        seedurl_news.<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params">i, e</span>) &#123; <span class="comment">//遍历种子页面里所有的a链接</span></span><br><span class="line">            <span class="keyword">var</span> myURL = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">//得到具体新闻url</span></span><br><span class="line">                <span class="keyword">var</span> href = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                href = $(e).<span class="title function_">attr</span>(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (href == <span class="literal">undefined</span>) <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">if</span> (href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;http://&#x27;</span>) &gt;= <span class="number">0</span>||href.<span class="title function_">toLowerCase</span>().<span class="title function_">indexOf</span>(<span class="string">&#x27;https；://&#x27;</span>) &gt;= <span class="number">0</span>) myURL = href;</span><br><span class="line">                <span class="comment">//http://开头的，之前这个文件虽然也能爬，但是会报错，原因是只爬了http开头的网址，现在加了https开头的网址，就好了</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (href.<span class="title function_">startsWith</span>(<span class="string">&#x27;//&#x27;</span>)) myURL = <span class="string">&#x27;http:&#x27;</span> + href; <span class="comment">////开头的</span></span><br><span class="line">                <span class="keyword">else</span> myURL = seedURL.<span class="title function_">substr</span>(<span class="number">0</span>, seedURL.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;/&#x27;</span>) + <span class="number">1</span>) + href; <span class="comment">//其他</span></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123; <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;识别种子页面中的新闻链接出错：&#x27;</span> + e) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!url_reg.<span class="title function_">test</span>(myURL)) <span class="keyword">return</span>; <span class="comment">//检验是否符合新闻url的正则表达式</span></span><br><span class="line">            <span class="comment">//console.log(myURL);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql = <span class="string">&#x27;select url from fetches where url=?&#x27;</span>;</span><br><span class="line">            <span class="keyword">var</span> fetch_url_Sql_Params = [myURL];</span><br><span class="line">            mysql.<span class="title function_">query</span>(fetch_url_Sql, fetch_url_Sql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (vals.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;URL duplicate!&#x27;</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="title function_">newsGet</span>(myURL); <span class="comment">//读取新闻页面</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">newsGet</span>(<span class="params">myURL</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">    <span class="title function_">request</span>(myURL, <span class="keyword">function</span>(<span class="params">err, res, body</span>) &#123; <span class="comment">//读取新闻页面</span></span><br><span class="line">        <span class="comment">//try &#123;</span></span><br><span class="line">        <span class="keyword">var</span> html_news = myIconv.<span class="title function_">decode</span>(body, myEncoding); <span class="comment">//用iconv转换编码</span></span><br><span class="line">        <span class="comment">//console.log(html_news);</span></span><br><span class="line">        <span class="comment">//准备用cheerio解析html_news</span></span><br><span class="line">        <span class="keyword">var</span> $ = myCheerio.<span class="title function_">load</span>(html_news, &#123; <span class="attr">decodeEntities</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">        myhtml = html_news;</span><br><span class="line">        <span class="comment">//&#125; catch (e) &#123;    console.log(&#x27;读新闻页面并转码出错：&#x27; + e);&#125;;</span></span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;转码读取成功:&quot;</span> + myURL);</span><br><span class="line">        <span class="comment">//动态执行format字符串，构建json对象准备写入文件或数据库</span></span><br><span class="line">        <span class="keyword">var</span> fetch = &#123;&#125;;</span><br><span class="line">        fetch.<span class="property">url</span> = myURL;</span><br><span class="line">        fetch.<span class="property">source_encoding</span> = myEncoding; <span class="comment">//编码</span></span><br><span class="line">        fetch.<span class="property">crawltime</span> = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        fetch.<span class="property">title</span> = $(<span class="string">&#x27;div[class=&quot;newsContent&quot;]&#x27;</span>).<span class="title function_">children</span>(<span class="string">&quot;h1&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">        <span class="keyword">if</span> (fetch.<span class="property">title</span> == <span class="string">&quot;&quot;</span>) fetch.<span class="property">title</span> = <span class="string">&quot;无标题&quot;</span>;</span><br><span class="line">        fetch.<span class="property">content</span> = $(<span class="string">&#x27;div[id=&quot;ContentBody&quot;]&#x27;</span>).<span class="title function_">children</span>(<span class="string">&quot;p&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*fetch.source_name=$(&quot;div.source data-source&quot;).attr(&quot;data-source&quot;);</span></span><br><span class="line"><span class="comment">        fetch.source_name = $(&#x27;span&#x27;).text();*/</span></span><br><span class="line">        fetch.<span class="property">source_name</span> =source_name;</span><br><span class="line">        fetch.<span class="property">publish_date</span> = $(<span class="string">&quot;div.time&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">        fetch.<span class="property">keywords</span> = $(<span class="string">&#x27;meta[name=&quot;keywords&quot;]&#x27;</span>).<span class="title function_">attr</span>(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">        fetch.<span class="property">author</span>=$(<span class="string">&quot;div.author&quot;</span>).<span class="title function_">text</span>();</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">var</span> fetchAddSql = <span class="string">&#x27;INSERT INTO fetches(url,source_name,source_encoding,title,&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;keywords,author,publish_date,crawltime,content) VALUES(?,?,?,?,?,?,?,?,?)&#x27;</span>;</span><br><span class="line">        <span class="keyword">var</span> fetchAddSql_Params = [fetch.<span class="property">url</span>, fetch.<span class="property">source_name</span>, fetch.<span class="property">source_encoding</span>,</span><br><span class="line">            fetch.<span class="property">title</span>, fetch.<span class="property">keywords</span>, fetch.<span class="property">author</span>,fetch.<span class="property">publish_date</span>,fetch.<span class="property">crawltime</span>.<span class="title function_">toFormat</span>(<span class="string">&quot;YYYY-MM-DD HH24:MI:SS&quot;</span>), fetch.<span class="property">content</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行sql，数据库中fetch表里的url属性是unique的，不会把重复的url内容写入数据库</span></span><br><span class="line">        mysql.<span class="title function_">query</span>(fetchAddSql, fetchAddSql_Params, <span class="keyword">function</span>(<span class="params">qerr, vals, fields</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (qerr) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(qerr);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;); <span class="comment">//mysql写入</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="热度分析-4"><a href="#热度分析-4" class="headerlink" title="热度分析"></a>热度分析</h3><p><img src="https://img-blog.csdnimg.cn/20210427190429440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="前端进一步美化"><a href="#前端进一步美化" class="headerlink" title="前端进一步美化"></a>前端进一步美化</h1><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p>之前在网页中插入了蜘蛛网的动态背景，依旧感觉有所欠缺，故以雪球网为例进行了进一步美化<br><img src="https://img-blog.csdnimg.cn/20210430121445571.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210430121535990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也可以再增加这样的表格<br><img src="https://img-blog.csdnimg.cn/20210430121651219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h2><p>后端也要做对应修改，这里因篇幅限制不多做展示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">&quot;.\心水2.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot; background-repeat:no-repeat ;background-size:100% 100%;</span></span></span><br><span class="line"><span class="string"><span class="tag">background-attachment: fixed;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span> 请输入查询内容：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>  <span class="attr">name</span>=<span class="string">&quot;title_text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px; height: 30px&quot;</span> &gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">class</span>=<span class="string">&quot;form-submit&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">&quot;查询&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">            width: 100px;</span></span></span><br><span class="line"><span class="string"><span class="tag">            height: 34px;</span></span></span><br><span class="line"><span class="string"><span class="tag">          &quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">          <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">value</span>=<span class="string">&quot;清空&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">style</span>=<span class="string">&quot;</span></span></span><br><span class="line"><span class="string"><span class="tag">            width: 100px;</span></span></span><br><span class="line"><span class="string"><span class="tag">            height: 34px;</span></span></span><br><span class="line"><span class="string"><span class="tag">          &quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">        搜索范围：</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;option1&quot;</span>&gt;</span>标题</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;option2&quot;</span>&gt;</span>作者</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;option3&quot;</span>&gt;</span>内容</span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;cardLayout&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin: 10px 0px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border-color: rgba(1, 1, 0, 0.2);&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">id</span>=<span class="string">&quot;record2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        $(document).ready(function() &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            $(&quot;input:button&quot;).click(function() &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                $.get(&#x27;/process_get?title=&#x27; + $(&quot;input:text&quot;).val(), function(data) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    $(&quot;#record2&quot;).empty();</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    /*$(&quot;#record2&quot;).append(&#x27;<span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;cardLayout&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>url<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>source_name<span class="tag">&lt;/<span class="name">td</span>&gt;</span>&#x27; +</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        &#x27;<span class="tag">&lt;<span class="name">td</span>&gt;</span>title<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>author<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>publish_date<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;);*/</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        $(&quot;#record2&quot;).append(&#x27;<span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;cardLayout&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>网址<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>来源<span class="tag">&lt;/<span class="name">td</span>&gt;</span>&#x27; +</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        &#x27;<span class="tag">&lt;<span class="name">td</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>作者<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>发表时间<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    for (let list of data) &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        let table = &#x27;<span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;cardLayout&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#x27;;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        Object.values(list).forEach(element =&gt; &#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                            table += (element + &#x27;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                        $(&quot;#record2&quot;).append(table + &#x27;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span>&#x27;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                    &#125;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">                &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">            &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">        &#125;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h1 id="词云实现热度分析"><a href="#词云实现热度分析" class="headerlink" title="词云实现热度分析"></a>词云实现热度分析</h1><p>作业附加要求：完成对搜索内容的时间热度分析，比如搜索“新冠”，可以展示爬取数据内容中每一天包含“新冠”的条数，具体展示形式不限，可以用文字或表格展示，也可以用图表展示。</p>
<p>这里采用词云的方式实现，源码来自，需要使用python<br><a href="https://zhuanlan.zhihu.com/p/66157046">在vscode上使用python的配置</a><br><a href="https://godweiyang.com/2019/07/27/wordcloud/">词云使用</a><br><a href="https://github.com/godweiyang/wordcloud">词云源码</a><br>初步效果展示<br><img src="https://img-blog.csdnimg.cn/20210427124940133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210427125010193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在前端html文件里增加如下语句，即可实现点击按钮看词云图片的功能</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/文件所在完整路径\新闻.png&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>词云<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20210427131025863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3Njg3OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击词云按钮即可在浏览器显示这张图片</p>
<h1 id="心得总结"><a href="#心得总结" class="headerlink" title="心得总结"></a>心得总结</h1><p>本次期中爬虫作业到这里就暂时告一段落。</p>
<p>对于一个只有c语言基础的菜鸟来说，入门web编程的确存在着艰巨的挑战。一开始想从零开始一步步学懂js和html语法，再完成期中作业，但随着计划的进行发现语法数量繁杂，且只进行机械学习而不去应用很难记住，化为自用。</p>
<p>且由于其语法具有繁多而又较为简单的特点，比起一味的学习不如在事件中现学现用。所以采取了“下楼梯学习法”，先研究老师给出的爬虫示例，尽最大努力完成这项艰巨的挑战，再进行更低阶内容的巩固。</p>
<p>在后续的过程中了解到了模块引入、正则表达式、网站响应等基础用法，并且经历了爬虫数据“显示在终端中”-&gt;”保存在本地文件中“-&gt;”保存在数据库中“-&gt;”在浏览器中显示“-&gt;“终端美化，增加动态背景图和边框”这五个阶段，其中尤为困难的是正则表达式、jquery语法的学习和爬虫语句整体的理解。</p>
<p>虽然实现的爬虫展示依旧简单，但经过一段时间的学习我逐渐走出了一头雾水的状况，对如何学习web有了一定的体悟。感谢老师的指导讲解，学长学姐的帮助，相信假以时日会做出更为优化的页面。期待下一次项目的完成。</p>
]]></content>
      <categories>
        <category>node.js</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>web</tag>
      </tags>
  </entry>
</search>
